#用NFS挂在文件时网络通信设置
ifconfig eth0 hw ether FA:5A:E1:B1:89:75           //设置开发板以太网物理地址
ifconfig eth0 192.168.0.101 netmask 255.255.255.0  //设置开发板ip和掩码，需要和烧写时的配置相同
ifconfig add default gw 192.168.0.1                //设置网关，用于服务器和开发板处于不同网段时的相互通信

#挂在服务器文件到开发板的mnt目录下
mount -t nfs -o nolock -o tcp -o rsize=32768,wsize=32768 192.168.0.117:/home/caizhi/Hi3559A/V100R001C02SPC010/01.software/board/Hi3559AV100_SDK_V2.0.1.0/ /mnt
mount -t nfs -o nolock -o tcp -o rsize=32768,wsize=32768 192.168.0.117:/home/caizhi/Hi3559A/V100R001C02SPC010/01.software/board/Hi3559AV100_SDK_V2.0.1.0 /Hi3559A


#烧写
烧写uboot，kernel，文件系统。在官方给的SDK中已有制作好的根文件系统，如果要添加自己的应用程序，将可执行文件，配置文件，库文件等拷贝到相应的目录即可，
到osdrv/pub/pc目录下去用 ./mkyaffs2image100 <根文件系统所在地址> <生成镜像文件名> <pagesize> <ECC>来制作yaffs2格式的系统镜像.
已有uboot的情况下，可用tftp服务来烧些操作系统，对于文件系统我们可以在挂载后直接由cp（复制命令）来添加相关的文件


Ubuntu 16.04系统上NFS的安装与使用
https://blog.csdn.net/csdn_duomaomao/article/details/77822883


#单linux系统设置启动参数（multi-core）
setenv bootargs 'mem=512M console=ttyAMA0,115200 root=/dev/mtdblock2 rw rootfstype=yaffs2 mtdparts=hinand:1M(boot),9M(kernel),16M(rootfs)'
setenv bootcmd 'nand read 0x44000000 0x100000 0x900000;bootm 0x44000000'
saveenv
注意：在设置uboot，kernel，roofts的大小时应注意和烧写时的配置一致，这样才能成功添加环境变量进入操作系统


#双系统设置启动参数（big-little）
setenv bootargs 'mem=512M console=ttyAMA0,115200 clk_ignore_unused rw root=/dev/mtdblock2 rootfstype=yaffs2 mtdparts=hinand:1M(boot),9M(kernel),32M(rootfs)';sa
#不启动M7
setenv bootcmd 'nand read 0x45000000 0x2A00000 0x1000000;go_a53up 0x45000000; nand read 0x52000000 0x100000 0x900000;bootm 0x52000000';sa
#启动M7
setenv bootcmd 'nand read 0x45000000 0x2A00000 0x1000000;go_a53up 0x45000000; config_m7; nand read 0x52000000 0x3a00000 0x10000; cp.b 0x52000000 0x19000000 0x100000; go_m7; nand read 0x5200000 0x100000 0x900000;bootm 0x52000000';sa